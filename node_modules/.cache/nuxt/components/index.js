export const AboutExperience = () => import('../../../../components/about/Experience.vue' /* webpackChunkName: "components/about-experience" */).then(c => wrapFunctional(c.default || c))
export const AboutIntro = () => import('../../../../components/about/Intro.vue' /* webpackChunkName: "components/about-intro" */).then(c => wrapFunctional(c.default || c))
export const HomeAbout = () => import('../../../../components/home/About.vue' /* webpackChunkName: "components/home-about" */).then(c => wrapFunctional(c.default || c))
export const HomeHero = () => import('../../../../components/home/Hero.vue' /* webpackChunkName: "components/home-hero" */).then(c => wrapFunctional(c.default || c))
export const HomeOss = () => import('../../../../components/home/Oss.vue' /* webpackChunkName: "components/home-oss" */).then(c => wrapFunctional(c.default || c))
export const HomeSkills = () => import('../../../../components/home/Skills.vue' /* webpackChunkName: "components/home-skills" */).then(c => wrapFunctional(c.default || c))
export const HomeTestimonials = () => import('../../../../components/home/Testimonials.vue' /* webpackChunkName: "components/home-testimonials" */).then(c => wrapFunctional(c.default || c))
export const LayoutFooter = () => import('../../../../components/layout/Footer.vue' /* webpackChunkName: "components/layout-footer" */).then(c => wrapFunctional(c.default || c))
export const LayoutNavigation = () => import('../../../../components/layout/Navigation.vue' /* webpackChunkName: "components/layout-navigation" */).then(c => wrapFunctional(c.default || c))
export const LayoutThemeSwitcher = () => import('../../../../components/layout/ThemeSwitcher.vue' /* webpackChunkName: "components/layout-theme-switcher" */).then(c => wrapFunctional(c.default || c))

// nuxt/nuxt.js#8607
function wrapFunctional(options) {
  if (!options || !options.functional) {
    return options
  }

  const propKeys = Array.isArray(options.props) ? options.props : Object.keys(options.props || {})

  return {
    render(h) {
      const attrs = {}
      const props = {}

      for (const key in this.$attrs) {
        if (propKeys.includes(key)) {
          props[key] = this.$attrs[key]
        } else {
          attrs[key] = this.$attrs[key]
        }
      }

      return h(options, {
        on: this.$listeners,
        attrs,
        props,
        scopedSlots: this.$scopedSlots,
      }, this.$slots.default)
    }
  }
}
